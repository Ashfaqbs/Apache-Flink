version: '3.8'

services:
  # ðŸŸ¢ Zookeeper (Required for Kafka)
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  # ðŸŸ  Kafka Broker
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # ðŸ”µ PostgreSQL
  postgres:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: mainschema
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # ðŸŸ¢ Flink JobManager
  jobmanager:
    image: flink:1.20.1-scala_2.12
    depends_on:
      - kafka
      - postgres
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  # ðŸŸ¢ Flink TaskManager (Workers)
  taskmanager:
    image: flink:1.20.1-scala_2.12
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    deploy:
      replicas: 2
